spring:
  application:
    name: recommendation-service
  datasource:
    url: ${RECOMMENDATION_DB_URL}
    username: ${RECOMMENDATION_DB_USER}
    password: ${RECOMMENDATION_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver

  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
    open-in-view: false

  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}

  kafka:
    bootstrap-servers: ${BOOTSTRAP_SERVER}
    consumer:
      log-service-group-id: ${LOG_SERVICE_GROUP_ID:log-service-group}
      recommendation-service-group-id: ${RECOMMENDATION_SERVICE_GROUP_ID:recommendation-service-group}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

gemini:
  api:
    key: ${EXTERNAL_API_KEY}

eureka:
  client:
    service-url:
      defaultZone: http://localhost:19090/eureka/

server:
  port: 19096
