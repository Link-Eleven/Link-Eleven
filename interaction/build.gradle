plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
//	id 'com.github.davidmc24.gradle.plugin.avro' version '1.9.1'
}

group = 'com.link-eleven.msa'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://packages.confluent.io/maven/' }
}

ext {
	set('springCloudVersion', "2024.0.0")
}

dependencies {
	// JPA
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	// PostgreSQL
	runtimeOnly 'org.postgresql:postgresql'

	// TSID
	implementation 'io.hypersistence:hypersistence-utils-hibernate-63:3.7.5'

	// Spring Cloud
	implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
	implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

	// Web, Lombok, Test
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	testImplementation 'com.h2database:h2'


	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// QueryDsl
	implementation 'com.querydsl:querydsl-jpa:5.1.0:jakarta'
	annotationProcessor 'com.querydsl:querydsl-apt:5.1.0:jakarta'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

	// kafka
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.kafka:spring-kafka-test'

	// avro schema
	implementation 'org.apache.avro:avro:1.12.0'
	implementation 'org.apache.avro:avro-tools:1.12.0'
	implementation 'io.confluent:kafka-avro-serializer:7.8.0'

	implementation 'org.springframework.retry:spring-retry'
}

dependencyManagement {
	imports {
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

//avro {
//	outputCharacterEncoding = "UTF-8"
//	fieldVisibility = "PRIVATE"
//	stringType.set("String")
//}
//generateAvroJava {
//	source("src/main/resources/avro/")
//	include("**/*.avsc")
//	outputDir = file("build/generated/avro-java")
//} deprecated 된 플러그인 코드

sourceSets {
	main {
		java {
			srcDirs += "build/generated-main-avro-java"
		}
	}
}

tasks.register("generateAvroJava", JavaExec) {
	group = "build"
	description = "Compiles Avro schemas into Java classes"

	// mainClass 설정
	mainClass.set("org.apache.avro.tool.Main")

	// classpath를 runtimeClasspath로 설정
	classpath = configurations.runtimeClasspath

	// 명령어 인수 설정
	args = [
			"compile", "schema",
			"src/main/resources/avro/*.avsc",  // 스키마 경로
			"build/generated/avro-java"        // 출력 디렉토리
	]
}

tasks.named('compileJava') {
	dependsOn('generateAvroJava')
}

tasks.withType(Test) {
	enabled = false
}


tasks.named('test') {
	useJUnitPlatform()
}
